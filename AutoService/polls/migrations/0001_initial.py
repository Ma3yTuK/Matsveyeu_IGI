# Generated by Django 4.2.6 on 2023-10-17 14:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import polls.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('promo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='master id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='device')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='device type id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='device type')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='service type id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='part type')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='role id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='role')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='service type id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='service type')),
                ('part_required', models.BooleanField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='zone id')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='time zone')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='service id')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999)])),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999)])),
                ('devicetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.devicetype')),
                ('parttype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='polls.parttype')),
                ('servicetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.servicetype')),
            ],
            options={
                'ordering': ['servicetype'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='review id')),
                ('header', models.CharField(max_length=128)),
                ('body', models.CharField(max_length=2048)),
                ('mark', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-mark'],
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='part id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='part')),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999)])),
                ('image', models.ImageField(upload_to='polls/models/parts')),
                ('info', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Additional info')),
                ('devices', models.ManyToManyField(to='polls.device')),
                ('parttype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.parttype')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='order id')),
                ('datetime', models.DateTimeField(editable=False, null=True, verbose_name='Date and time')),
                ('info', models.CharField(blank=True, max_length=1024, null=True)),
                ('price', models.IntegerField(default=0, editable=False)),
                ('processing', models.BooleanField(default=True)),
                ('parts', models.ManyToManyField(to='polls.part')),
                ('promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='promo.promo')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='MasterType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='master id')),
                ('devicetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.devicetype')),
                ('servicetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.servicetype')),
            ],
            options={
                'ordering': ['servicetype'],
            },
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='master id')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='master')),
                ('mastertypes', models.ManyToManyField(to='polls.mastertype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='job id')),
                ('datetime', models.DateTimeField(editable=False, null=True, verbose_name='Date and time')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.device')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.master')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.order')),
                ('part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.part')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.service')),
            ],
            options={
                'ordering': ['datetime'],
            },
        ),
        migrations.AddField(
            model_name='device',
            name='devicetype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.devicetype'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='cart id')),
                ('order', models.OneToOneField(default=polls.models.Cart.create_order, editable=False, on_delete=django.db.models.deletion.SET_DEFAULT, to='polls.order')),
                ('promo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='promo.promo')),
            ],
        ),
    ]
